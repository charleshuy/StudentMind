@page "/appointments/create"
@using StudentMind.Core.Entity
@using StudentMind.Core.Enum
@using StudentMind.Core.Interfaces
@inject IUnitOfWork UnitOfWork
@inject NavigationManager NavigationManager

<PageTitle>Create Appointment</PageTitle>

<h1>Create Appointment</h1>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm Model="Appointment" OnValidSubmit="AddAppointment" FormName="CreateAppointmentForm">
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert" />
            <div class="mb-3">
                <label for="psychologistid" class="form-label">Psychologist ID:</label>
                <InputText id="psychologistid" @bind-Value="Appointment.PsychologistId" class="form-control" />
                <ValidationMessage For="() => Appointment.PsychologistId" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="userid" class="form-label">User ID:</label>
                <InputText id="userid" @bind-Value="Appointment.UserId" class="form-control" />
                <ValidationMessage For="() => Appointment.UserId" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="starttime" class="form-label">Start Time:</label>
                <InputDate id="starttime" @bind-Value="Appointment.StartTime" class="form-control" />
                <ValidationMessage For="() => Appointment.StartTime" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="endtime" class="form-label">End Time:</label>
                <InputDate id="endtime" @bind-Value="Appointment.EndTime" class="form-control" />
                <ValidationMessage For="() => Appointment.EndTime" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="note" class="form-label">Note:</label>
                <InputText id="note" @bind-Value="Appointment.Note" class="form-control" />
                <ValidationMessage For="() => Appointment.Note" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="status" class="form-label">Status:</label>
                <InputSelect id="status" @bind-Value="Appointment.Status" class="form-control">
                    @foreach (var status in Enum.GetValues(typeof(EnumStatus)).Cast<EnumStatus>())
                    {
                        <option value="@status">@status.ToString()</option>
                    }
                </InputSelect>
                <ValidationMessage For="() => Appointment.Status" class="text-danger" />
            </div>

            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/appointments">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Appointment Appointment { get; set; } = new();

    private async Task AddAppointment()
    {
        Appointment.Id = Guid.NewGuid().ToString().ToUpper();
        var appointmentRepo = UnitOfWork.GetRepository<Appointment>();
        await appointmentRepo.InsertAsync(Appointment);
        await UnitOfWork.SaveAsync();
        NavigationManager.NavigateTo("/appointments");
    }
}