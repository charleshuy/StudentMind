@page
@model StudentMind.Razor.Pages.ChoicePages.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>

<form method="get">
    <div class="row">
        <div class="col-md-4">
            <label>Search Content:</label>
            <input type="text" name="searchChoices" value="@Model.SearchChoices" class="form-control" />
        </div>
    </div>
    <br />
    <button type="submit" class="btn btn-primary">Search</button>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Choice[0].Content)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Choice[0].Question)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Choice[0].Point)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Choice[0].CreatedBy)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Choice[0].LastUpdatedBy)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Choice[0].DeletedBy)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Choice[0].CreatedTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Choice[0].LastUpdatedTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Choice[0].DeletedTime)
            </th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Choice) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Content)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Question.Content)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Point)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedBy)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastUpdatedBy)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DeletedBy)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastUpdatedTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DeletedTime)
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
@if (Model.TotalPages > 1)
{
    <nav>
        <ul class="pagination justify-content-center">
            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                    <a class="page-link" asp-page="./Index"
                       asp-route-pageNumber="@i"
                       asp-route-searchChoices="@Model.SearchChoices">
                       @i
                    </a>
                </li>
            }
        </ul>
    </nav>
}