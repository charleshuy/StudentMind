@page "/events"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using StudentMind.Core.Entity
@using StudentMind.Core.Interfaces
@implements IAsyncDisposable
@inject IUnitOfWork UnitOfWork
@inject NavigationManager NavigationManager

<PageTitle>Events</PageTitle>

<link href="css/event.css" rel="stylesheet" />

<div class="modern-container">
    <h1 class="modern-header">Events</h1>

    <p>
        <a href="events/create" class="new-event-button">NEW EVENT</a>
    </p>

    @if (events is not null)
    {
        <QuickGrid Class="modern-table" Items="events.AsQueryable()" PageSize="10" AllowPaging="true">
            <PropertyColumn Property="e => e.Name" Title="Event Name" Sortable="true" />
            <PropertyColumn Property="e => e.Description" Title="Description" Sortable="true" />
            <PropertyColumn Property="e => e.StartDate" Title="Start" Format="d MMMM yyyy" Sortable="true" />
            <PropertyColumn Property="e => e.EndDate" Title="End" Format="d MMMM yyyy" Sortable="true" />
            <PropertyColumn Property="e => e.HostId" Title="Host" Sortable="true" />

            <TemplateColumn Title="Actions" Class="action-buttons">
                <a href="@($"events/edit?id={context.Id}")" class="edit">Edit</a>
                <a href="@($"events/details?id={context.Id}")" class="details">Details</a>
                <a href="@($"events/delete?id={context.Id}")" class="delete">Delete</a>
            </TemplateColumn>
        </QuickGrid>
    }
    else
    {
        <div class="loading">Loading events...</div>
    }
</div>

@code {
    private IQueryable<Event>? events = default;

    protected override void OnInitialized()
    {
        var eventRepository = UnitOfWork.GetRepository<Event>();
        events = eventRepository.Entities;
    }

    public async ValueTask DisposeAsync()
    {
        await UnitOfWork.DisposeAsync();
    }
}