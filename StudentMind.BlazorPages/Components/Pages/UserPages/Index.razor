@page "/users"
@using StudentMind.Core.Interfaces
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using StudentMind.Core.Entity
@using StudentMind.Infrastructure
@implements IAsyncDisposable
@inject IUnitOfWork UnitOfWork

<PageTitle>Users</PageTitle>

<link href="css/user.css" rel="stylesheet" />

<div class="modern-container">
    <h1 class="modern-header">User List</h1>

    <p>
        <a href="users/create" class="create-button">CREATE NEW</a>
    </p>

    @if (users is not null)
    {
        <QuickGrid Class="modern-table" Items="users" PageSize="10" AllowPaging="true">
            <PropertyColumn Property="user => user.FullName" Title="Full Name" Sortable="true" />
            <PropertyColumn Property="user => user.PhoneNumber" Title="Phone" Sortable="true" />
            <PropertyColumn Property="user => user.Gender" Title="Gender" Sortable="true" />
            <PropertyColumn Property="user => user.Email" Title="Email" Sortable="true" />
            <PropertyColumn Property="user => user.DateOfBirth" Title="DOB" Format="d MMMM yyyy" Sortable="true" />
            <PropertyColumn Property="user => user.Role.RoleName" Title="Role" Sortable="true" />

            <TemplateColumn Title="Actions" Class="action-buttons">
                <a href="@($"users/edit?id={context.Id}")" class="edit">Edit</a>
                <a href="@($"users/details?id={context.Id}")" class="details">Details</a>
                <a href="@($"users/delete?id={context.Id}")" class="delete">Delete</a>
            </TemplateColumn>
        </QuickGrid>
    }
    else
    {
        <div class="loading">Loading users...</div>
    }
</div>

@code {
    private IQueryable<User> users = default!;

    protected override async Task OnInitializedAsync()
    {
        var userRepository = UnitOfWork.GetRepository<User>();
        users = userRepository.Entities.Include(u => u.Role);
    }

    public async ValueTask DisposeAsync() => await UnitOfWork.DisposeAsync();
}