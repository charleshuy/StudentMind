@page "/events"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using StudentMind.Core.Entity
@using StudentMind.Infrastructure.Context
@implements IAsyncDisposable
@inject IDbContextFactory<StudentMind.Infrastructure.Context.DatabaseContext> DbFactory

<PageTitle>Index</PageTitle>

<h1>Index</h1>

<p>
    <a href="events/create">Create New</a>
</p>

<QuickGrid Class="table" Items="context.Events">
    <PropertyColumn Property="event => event.Name" />
    <PropertyColumn Property="event => event.Description" />
    <PropertyColumn Property="event => event.StartDate" />
    <PropertyColumn Property="event => event.EndDate" />
    <PropertyColumn Property="event => event.HostId" />
    <PropertyColumn Property="event => event.CreatedBy" />
    <PropertyColumn Property="event => event.LastUpdatedBy" />
    <PropertyColumn Property="event => event.DeletedBy" />
    <PropertyColumn Property="event => event.CreatedTime" />
    <PropertyColumn Property="event => event.LastUpdatedTime" />
    <PropertyColumn Property="event => event.DeletedTime" />

    <TemplateColumn Context="event">
        <a href="@($"events/edit?id={event.Id}")">Edit</a> |
        <a href="@($"events/details?id={event.Id}")">Details</a> |
        <a href="@($"events/delete?id={event.Id}")">Delete</a>
    </TemplateColumn>
</QuickGrid>

@code {
    private DatabaseContext context = default!;

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
