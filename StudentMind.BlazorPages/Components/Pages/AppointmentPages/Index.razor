@page "/appointments"
@using Microsoft.AspNetCore.Components.QuickGrid
@using StudentMind.Core.Entity
@using StudentMind.Core.Interfaces
@implements IAsyncDisposable
@inject IUnitOfWork UnitOfWork

<PageTitle>Appointments</PageTitle>

<h1>Appointments</h1>

<p>
    <NavLink href="appointments/create">Create New</NavLink>
</p>

@if (appointments is not null)
{
    <QuickGrid Class="table" Items="appointments.AsQueryable()">
        <PropertyColumn Property="a => a.PsychologistId" Title="Psychologist ID" />
        <PropertyColumn Property="a => a.UserId" Title="User ID" />
        <PropertyColumn Property="a => a.CreatedBy" Title="Created By" />
        <PropertyColumn Property="a => a.LastUpdatedBy" Title="Updated By" />
        <PropertyColumn Property="a => a.DeletedBy" Title="Deleted By" />
        <PropertyColumn Property="a => a.CreatedTime" Title="Created Time" />
        <PropertyColumn Property="a => a.LastUpdatedTime" Title="Updated Time" />
        <PropertyColumn Property="a => a.DeletedTime" Title="Deleted Time" />

        <TemplateColumn Context="a">
            <NavLink href="@($"appointments/edit?id={a.Id}")">Edit</NavLink> |
            <NavLink href="@($"appointments/details?id={a.Id}")">Details</NavLink> |
            <NavLink href="@($"appointments/delete?id={a.Id}")">Delete</NavLink>
        </TemplateColumn>
    </QuickGrid>
}
else
{
    <p>Loading...</p>
}

@code {
    private IQueryable<Appointment>? appointments = default;

    protected override void OnInitialized()
    {
        var appointmentRepository = UnitOfWork.GetRepository<Appointment>();
        appointments = appointmentRepository.Entities;
    }

    public async ValueTask DisposeAsync()
    {
        await UnitOfWork.DisposeAsync();
    }
}
